/*
Highly Optimized Object-oriented Many-particle Dynamics -- Blue Edition
(HOOMD-blue) Open Source Software License Copyright 2008-2011 Ames Laboratory
Iowa State University and The Regents of the University of Michigan All rights
reserved.

HOOMD-blue may contain modifications ("Contributions") provided, and to which
copyright is held, by various Contributors who have granted The Regents of the
University of Michigan the right to modify and/or distribute such Contributions.

You may redistribute, use, and create derivate works of HOOMD-blue, in source
and binary forms, provided you abide by the following conditions:

* Redistributions of source code must retain the above copyright notice, this
list of conditions, and the following disclaimer both in the code and
prominently in any materials provided with the distribution.

* Redistributions in binary form must reproduce the above copyright notice, this
list of conditions, and the following disclaimer in the documentation and/or
other materials provided with the distribution.

* All publications and presentations based on HOOMD-blue, including any reports
or published results obtained, in whole or in part, with HOOMD-blue, will
acknowledge its use according to the terms posted at the time of submission on:
http://codeblue.umich.edu/hoomd-blue/citations.html

* Any electronic documents citing HOOMD-Blue will link to the HOOMD-Blue website:
http://codeblue.umich.edu/hoomd-blue/

* Apart from the above required attributions, neither the name of the copyright
holder nor the names of HOOMD-blue's contributors may be used to endorse or
promote products derived from this software without specific prior written
permission.

Disclaimer

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND/OR ANY
WARRANTIES THAT THIS SOFTWARE IS FREE OF INFRINGEMENT ARE DISCLAIMED.

IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*! \mainpage

Welcome to the \b user documentation for HOOMD-blue!

-# \subpage page_install_guide
-# \subpage page_quick_start
-# \subpage page_units
-# \subpage page_example_scripts
-# \subpage page_command_list
-# \subpage page_xml_file_format
-# \subpage page_command_line_options
-# \subpage page_conversion_scripts
-# \subpage page_compile_guide
-# \subpage page_license
-# \subpage page_citing
-# \subpage page_credits

<hr>

Up to date documentation can be found at the following links:
 - <a href="http://codeblue.umich.edu/hoomd-blue/doc/">Documentation</a> for the latest <b>packaged release</b>.
 - <a href="http://codeblue.umich.edu/hoomd-blue/doc-master/">Documentation</a> for the current <b>development version</b> in \em master.
 - Documentation consistent with any given version can be built from the source code by following the instructions in \ref page_compile_guide.
*/

/*! \page page_command_list Index of Script Commands

Click on an individual command in the list to go to its documentation. Click on the package link at the 
beginning of each list to get a general overview of all commands in that package.

Table of contents:
 - \ref sec_index_run
 - \ref sec_index_option
 - \ref sec_index_init
 - \ref sec_index_integration
 - \ref sec_index_update
 - \ref sec_index_compute
 - \ref sec_index_analyze
 - \ref sec_index_dump
 - Potentials
   - \ref sec_index_pair
   - \ref sec_index_bond
   - \ref sec_index_angle
   - \ref sec_index_dihedral
   - \ref sec_index_improper
   - \ref sec_index_charge
   - \ref sec_index_wall
   - \ref sec_index_constraint
   - \ref sec_index_external
   - \ref sec_index_other

 - Helpers
   - \ref sec_index_group
   - \ref sec_index_variant

 - Miscellaneous
  - \ref sec_index_tuning
  - \ref sec_index_benchmark
  - \ref sec_index_communicate

\section sec_index_run Run
 - \link hoomd_script.get_step() get_step\endlink - <i>Gets the current time step</i>
 - \link hoomd_script.run() run\endlink - <i>Runs the simulation for a given number of time steps</i>
 - \link hoomd_script.run_upto() run_upto\endlink - <i>Runs the simulation up to a given time step number</i>

\section sec_index_option Option
 - Command line
    - \ref page_command_line_options
 - In script
    - \link hoomd_script.option.set_mode() option.set_mode\endlink - <i>Set the execution mode</i>
    - \link hoomd_script.option.set_gpu() option.set_gpu\endlink - <i>Set the gpu</i>
    - \link hoomd_script.option.set_ncpu() option.set_ncpu\endlink - <i>Set the number of CPU threads</i>
    - \link hoomd_script.option.set_gpu_error_checking() option.set_gpu_error_checking\endlink - <i>Set the error checking flag</i>
    - \link hoomd_script.option.set_min_cpu() option.set_min_cpu\endlink - <i>Set the minimize CPU usage flag</i>
    - \link hoomd_script.option.set_ignore_display() option.set_ignore_display\endlink - <i>Set the ignore display GPU flag</i>
    - \link hoomd_script.option.get_user() option.get_user\endlink - <i>Get user options</i>
    
\section sec_index_init Initialize
 - \link hoomd_script.init.create_empty() init.create_empty\endlink - <i>Create an empty system</i>
 - \link hoomd_script.init.create_random() init.create_random\endlink - <i>Generates N randomly positioned particles of the same type </i>
 - \link hoomd_script.init.create_random_polymers() init.create_random_polymers\endlink - <i>Generates any number of randomly positioned polymers of configurable types </i>
 - \link hoomd_script.init.read_bin() init.read_bin\endlink - <i>Reads initial system state from a binary file </i>
 - \link hoomd_script.init.read_snapshot() init.read_snapshot\endlink - <i>Initializes the system from a snapshot</i>
 - \link hoomd_script.init.read_xml() init.read_xml\endlink - <i>Reads initial system state from an XML file</i>
 - \link hoomd_script.init.reset() init.reset\endlink - <i>Resets all hoomd_script variables </i>
 - \link hoomd_script.init.is_initialized() init.is_initialized\endlink - <i>Tests if the system has been initialized </i>

 - \link hoomd_script.data data access\endlink - <i>Access particles, bonds, and other state information inside scripts </i>

\section sec_index_integration Integrate
 - \link hoomd_script.integrate.mode_minimize_fire integrate.mode_minimize_fire\endlink - <i>Energy Minimizer (FIRE) </i>
 - \link hoomd_script.integrate.mode_minimize_rigid_fire integrate.mode_minimize_rigid_fire\endlink - <i>Energy Minimizer (rigid bodies) (FIRE)</i>
 - \link hoomd_script.integrate.mode_standard integrate.mode_standard\endlink - <i>Enables a variety of standard integration methods </i>
   - \link hoomd_script.integrate.berendsen integrate.berendsen\endlink - <i>NVT integration via the Berendsen thermostat</i> 
   - \link hoomd_script.integrate.bdnvt integrate.bdnvt\endlink - <i>NVT integration via Brownian dynamics </i> 
   - \link hoomd_script.integrate.bdnvt_rigid integrate.bdnvt_rigid\endlink - <i>NVT integration of rigid bodies via Brownian Dynamics</i>
   - \link hoomd_script.integrate.nph integrate.nph\endlink - <i>NPH integration via the Andersen / modified Parrinello-Rahman barostat </i>
   - \link hoomd_script.integrate.nph_rigid integrate.nph_rigid\endlink - <i>NPH Integration of rigid bodies</i>
   - \link hoomd_script.integrate.npt integrate.npt\endlink - <i>NPT Integration with various box-shape symmetries</i>
   - \link hoomd_script.integrate.npt_rigid integrate.npt_rigid\endlink - <i>NPT Integration of rigid bodies</i>
   - \link hoomd_script.integrate.nve integrate.nve\endlink - <i>NVE Integration via Velocity-Verlet </i>
   - \link hoomd_script.integrate.nve_rigid integrate.nve_rigid\endlink - <i>NVE integration of rigid bodies</i>
   - \link hoomd_script.integrate.nvt integrate.nvt\endlink - <i>NVT Integration via the Nos&eacute;-Hoover thermostat </i>
   - \link hoomd_script.integrate.nvt_rigid integrate.nvt_rigid\endlink - <i>NVT integration of rigid bodies</i>
 
\section sec_index_update Update
 - \link hoomd_script.update.box_resize update.box_resize\endlink - <i>Rescales the system box size </i>
 - \link hoomd_script.update.enforce2d update.enforce2d\endlink - <i>Enforces 2D simulation </i>
 - \link hoomd_script.update.rescale_temp update.rescale_temp\endlink - <i>Rescales particle velocities </i>
 - \link hoomd_script.update.sort update.sort\endlink - <i>Sorts particles in memory to improve cache coherency</i>
 - \link hoomd_script.update.zero_momentum update.zero_momentum\endlink - <i>Zeroes system momentum </i>

\section sec_index_compute Compute
 - \link hoomd_script.compute.thermo compute.thermo\endlink - <i>Compute thermodynamic properties of a group of particles </i>

\section sec_index_analyze Analyze
 - \link hoomd_script.analyze.imd analyze.imd\endlink - <i>Sends simulation snapshots to VMD in real-time </i>
 - \link hoomd_script.analyze.log analyze.log\endlink - <i>Logs a number of calculated quantities to a file </i>
 - \link hoomd_script.analyze.msd analyze.msd\endlink - <i>Calculates the mean-squared displacement of groups of particles and logs the values to a file </i>

\section sec_index_dump Dump
 - \link hoomd_script.dump.dcd dump.dcd\endlink - <i>Writes simulation snapshots in the DCD format </i>
 - \link hoomd_script.dump.mol2 dump.mol2\endlink - <i>Writes a simulation snapshot in the MOL2 format </i>
 - \link hoomd_script.dump.pdb dump.pdb\endlink - <i>Writes simulation snapshots in the PBD format </i>
 - \link hoomd_script.dump.bin dump.bin\endlink - <i>Writes simulation snapshots in a binary format </i>
 - \link hoomd_script.dump.xml dump.xml\endlink - <i>Writes simulation snapshots in the HOOMD XML format </i>

<h2>Potentials</h2>

\section sec_index_pair Pair potentials
 - \link hoomd_script.pair.cgcmm pair.cgcmm\endlink - <i>CMM coarse-grain model %pair %force </i>
 - \link hoomd_script.pair.dpd pair.dpd\endlink - <i>NVT Integration via Dissipative Particle Dynamics %pair %force </i> 
 - \link hoomd_script.pair.dpdlj pair.dpdlj\endlink - <i>NVT Integration via Dissipative Particle Dynamics and LJ Force %pair %force </i>
 - \link hoomd_script.pair.dpd_conservative pair.dpd_conservative\endlink - <i>DPD Conservative %pair %force </i>
 - \link hoomd_script.pair.eam pair.eam\endlink - <i>EAM %pair %force </i> 
 - \link hoomd_script.pair.ewald pair.ewald\endlink - <i>Short range ewald %pair %force </i> 
 - \link hoomd_script.pair.gauss pair.gauss\endlink - <i>Gaussian %pair %force </i>
 - \link hoomd_script.pair.lj pair.lj\endlink - <i>Lennard-Jones %pair %force </i>
 - \link hoomd_script.pair.morse pair.morse\endlink - <i>Morse %pair %force </i>
 - \link hoomd_script.pair.table pair.table\endlink - <i>Tabulated %pair %force </i>
 - \link hoomd_script.pair.slj pair.slj\endlink - <i>Shifted Lennard-Jones %pair %force </i>
 - \link hoomd_script.pair.yukawa pair.yukawa\endlink - <i>Yukawa %pair %force </i>
 - \link hoomd_script.pair.force_shifted_lj pair.force_shifted_lj\endlink - <i>Force shifted Lennard-Jones %pair %force </i>
 - \link hoomd_script.pair.nlist nlist\endlink - <i>Interface for controlling neighbor list parameters </i>

\section sec_index_bond Bond potentials
 - \link hoomd_script.bond.harmonic bond.harmonic\endlink - <i>Harmonic %bond force </i>
 - \link hoomd_script.bond.fene bond.fene\endlink - <i>FENE %bond force </i>
 - \link hoomd_script.bond.table bond.table\endlink - <i>Tabulated %bond force </i>

\section sec_index_angle Angle potentials
 - \link hoomd_script.angle.harmonic angle.harmonic\endlink - <i>Harmonic %angle force </i>
 - \link hoomd_script.angle.cgcmm angle.cgcmm\endlink - <i>CGCMM %angle force </i>

\section sec_index_dihedral Dihedral potentials
 - \link hoomd_script.dihedral.harmonic dihedral.harmonic\endlink - <i>Harmonic %dihedral force </i>

\section sec_index_improper Improper potentials
 - \link hoomd_script.improper.harmonic improper.harmonic\endlink - <i>Harmonic %improper force </i>

\section sec_index_charge Electrostatic potentials
 - \link hoomd_script.charge.pppm charge.pppm\endlink - <i>Long-range electrostatics computed with the PPPM method</i>

\section sec_index_wall Wall potentials
 - \link hoomd_script.wall.lj wall.lj\endlink - <i>Lennard-Jones %wall %force </i>

\section sec_index_constraint Constraint forces
 - \link hoomd_script.constrain.sphere constrain.sphere\endlink - <i>Constrain particles to the surface of a sphere </i>

 \section sec_index_external External forces
 - \link hoomd_script.external.periodic external.periodic\endlink - <i>One-dimension periodic potential</i>

 \section sec_index_other Other forces
 - \link hoomd_script.force.constant force.constant\endlink - <i>Constant %force </i>


<h2>Helpers</h2>

\section sec_index_group Group
 - Create groups
  - \link hoomd_script.group.all() group.all\endlink - <i>Groups all particles </i>
  - \link hoomd_script.group.charged() group.charged\endlink - <i>Groups particles that are charged</i>
  - \link hoomd_script.group.cuboid() group.cuboid\endlink - <i>Groups particles in a cuboid</i>
  - \link hoomd_script.group.nonrigid() group.nonrigid\endlink - <i>Groups particles that do not belong to rigid bodies</i>
  - \link hoomd_script.group.rigid() group.rigid\endlink - <i>Groups particles that belong to rigid bodies</i>
  - \link hoomd_script.group.tag_list() group.tag_list\endlink - <i>Groups particles by tag list </i>
  - \link hoomd_script.group.tags() group.tags\endlink - <i>Groups particles by tag </i>
  - \link hoomd_script.group.type() group.type\endlink - <i>Groups particles by type </i>
 - Combine groups
  - \link hoomd_script.group.difference() group.difference\endlink - <i>Create a new group from the set difference or complement of two existing groups </i>
  - \link hoomd_script.group.intersection() group.intersection\endlink - <i>Create a new group from the set intersection of two existing groups </i>
  - \link hoomd_script.group.union() group.union\endlink - <i>Create a new group from the set union of two existing groups </i>

\section sec_index_variant Variants
 - \link hoomd_script.variant.linear_interp variant.linear_interp\endlink - <i>Linearly interpolated variant</i>

<h2>Miscellaneous commands</h2>
\section sec_index_tuning Tune
 - \link hoomd_script.tune.find_optimal_block_sizes() tune.find_optimal_block_sizes\endlink - <i>Determine optimal block size tuning parameters </i>
 - \link hoomd_script.tune.r_buff() tune.r_buff()\endlink - <i>Make a series of short runs to determine the fastest performing r_buff setting </i>

\section sec_index_benchmark Benchmark
 - \link hoomd_script.benchmark.series() benchmark.series\endlink - <i>Perform a series of short runs to benchmark overall simulation performance</i>

\section sec_index_communicate Communication helpers
 - \link hoomd_script.comm.get_num_ranks() comm.get_num_ranks\endlink - <i>Get the total number of ranks in a a parallel execution</i>
 - \link hoomd_script.comm.is_root() comm.is_root\endlink - <i>Check if the current process is the root rank</i>
 

*/

